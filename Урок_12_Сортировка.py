"""Сортировка пузырьком"""

"""Первый способ"""
a = [4, 9, 0, 17, 23, 4, 1, 0] 
n = len(a)

for i in range(n):
    for j in range(n-1-i):
        if a[j] > a[j+1]:
            a[j], a[j + 1] = a[j + 1], a[j]

print(a)

"""Второй способ"""
b = [4, 9, 0, 17, 23, 4, 1, 0]

b.sort() # Встроенная функция сортировки

print(b)

"""Способ при котором мы хотим, что бы сортировалось по остатку от деления на 10"""
def cmp(x):
    return x % 10

c = [4, 9, 0, 17, 23, 4, 1, 0]

c.sort(key=cmp)
print(c)

"""Задача-пример "Зарплата сотрудников" """
n = 5 # Количество сотрудников
sph = [12, 30, 97, 5, 6] # Сколько денег хочет сотрудник за один час
hs = [10, 120, 4, 8, 9] # Сколько отработал сотрудник

res = [] # Пустой список для хранения заработанных денег за отработанное время
for i in range(n):
    r = sph[i] * hs[i] # Сколько денег получит сотрудник за отработанное время
    res.append(r) # Добавляем в список res количество денег которое получит сотрудник за отработанное время

res.sort()
print(res)

"""Ещё одна практическая задача"""
def cmp2(x):
    return (x // 10) * (x % 10)

tmp = [12, 34, 35, 12, 68, 29]
tmp.sort(key=cmp2)

print(tmp)

"""Определение максимального или минимального числа"""
a1 = 5
b1 = 8
c1 = 1
d1 = -19

print(max(a1, b1, c1, d1))
print(min(a1, b1, c1, d1))

"""Определение максимального или минимального числа из списка"""
tmp = [1, 4, -19, 30, 56]
print(max(tmp))
print(min(tmp))

"""Кортежи"""

z = (2, 4, 9, 7, 2) # Кортеж является не изменяемым

print(len(z)) # Можем узнать длину кортежа
print(z.count(2)) # Можем узнать сколько у нас определенных элементов в кортеже


b2 = tuple()

"""Пример"""
poets = [('Ptushkin', 1203, 1299), ('Cheburashkin', 999, 1201), ('Petrogradskiy', 1931, 1956)] 
# poets[0][1] = 1204 программа не даст изменить это значение, т.к. это кортеж, а он не изменяемый, но мы можем поменять кортеж целиком на другой:
poets[0] = ('Ptushkin', 1204, 1299) # Поправили дату рождения
print(poets)